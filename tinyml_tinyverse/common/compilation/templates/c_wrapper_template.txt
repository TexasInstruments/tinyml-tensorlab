#include <stdint.h>
#include <stdio.h>
#include <tvmgen_default.h>
#include <kernel/dpl/CycleCounterP.h>

uint32_t i1, i2;
uint64_t startTimeInUSec, elapsedTimeInUsecs;

#ifndef DEBUG_PRINT
#define DEBUG_PRINT 1
#endif

#ifdef __cplusplus
extern "C" {
#endif

{{input_related_data}}
{{output_related_data}}

int tvm_main(int argc, char *argv[])
{
  int status = 0;
  struct tvmgen_default_inputs inputs   = { {{inputs_base_addresses}} };
  struct tvmgen_default_outputs outputs  = { {{outputs_base_addresses}} };

  if (DEBUG_PRINT) printf("1. Running model...\n");
  for (int i = 1; i <= 10; i++){
  startTimeInUSec = ClockP_getTimeUsec();
  i1 = (unsigned long)CycleCounterP_getCount32();
  status = tvmgen_default_run(&inputs, &outputs);
  i2 = (unsigned long)CycleCounterP_getCount32();
  elapsedTimeInUsecs = ClockP_getTimeUsec() - startTimeInUSec;
  printf("i=%d, execution status: %d, Elapsed Time(us)=%lld, CPU Cycles = %d\n", i, status, elapsedTimeInUsecs, (i2-i1));
  }

  return 0;
}

#ifdef __cplusplus
}
#endif
;