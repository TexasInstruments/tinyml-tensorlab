
common:
    target_module: 'timeseries'
    task_type: 'generic_timeseries_forecasting'
    target_device: 'F28P55'
    run_name: '{date-time}/{model_name}'
    
dataset:
    # enable/disable dataset loading
    enable: True
    data_dir: 'files'
    dataset_name: pmsm_rotor_temp_prediction_dataset
    input_data_path: https://software-dl.ti.com/C2000/esd/mcu_ai/01_01_00/datasets/pmsm_rotor_temp.zip

data_processing_feature_extraction: # One or more can be cascaded in the list
    # transforms: 'Downsample SimpleWindow'
    data_proc_transforms: ['SimpleWindow']
    # Downsample
    #sampling_rate: 5
    #new_sr: 2
    # SimpleWindow
    frame_size: 10 
    stride_size: 0.1 
    forecast_horizon: 2 # Number of future timesteps to be predicted
    variables: 7 # takes the first 'variables' columns after the time columns as input to predict the target variables
    target_variables: [7,8,9,10,11] # Other format for `target_variables` specification: ['pm', 'stator_yoke'] or  [7,10] or ['7','8','10',]. If numbers which represent indices, are provided in list, assign column number 0 to the first non time column and continue numbering from there

training:
    # enable/disable training
    enable: True #False
#    optimizer: 'adam'
    with_input_batchnorm: False
    # F28x generic timeseries model names: TimeSeries_Generic_1k_t, TimeSeries_Generic_4k_t, TimeSeries_Generic_6k_t, TimeSeries_Generic_13k_t
    # GUI only model names: ArcFault_model_200_t, ArcFault_model_300_t, ArcFault_model_700_t
    model_name: 'TimeSeries_Generic_Forecasting_13k_t'
    # model_spec: '../tinyml-mlbackend/proprietary_models/cnn_af_3l.py'
    model_config: ''
    batch_size: 256
    training_epochs: 15
    num_gpus: 0
    quantization: 1
    optimizer: adam
    learning_rate: 0.001
    output_dequantize: True

testing:
    enable: True

compilation:
    # enable/disable compilation
    enable: True #False
    keep_libc_files: False
#    compile_preset_name: default_preset/forced_soft_npu_preset
